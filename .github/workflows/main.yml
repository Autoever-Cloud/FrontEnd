name: React CI/CD to EC2

# main 브랜치에 푸시될 때 워크플로우 실행
on:
  push:
    branches: [ operation ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 실행 환경

    steps:
    # 1. 코드 체크아웃
    - name: Checkout Code
      uses: actions/checkout@v4

    # 2. Node.js 환경 설정
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Dockerfile에서 사용한 버전과 일치 권장
        cache: 'npm'

    # 3. npm 종속성 설치
    - name: Install Dependencies
      run: npm install

    # 4. React 앱 빌드
    # GitHub Secrets에 저장된 환경변수를 주입하여 빌드
    - name: Build React App
      run: npm run build
      env:
        REACT_APP_PROD_BASE_URL: ${{ secrets.REACT_APP_PROD_BASE_URL }}
        REACT_APP_KIBANA_URL: ${{ secrets.REACT_APP_KIBANA_URL }}

    # 5. Docker Hub 로그인
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 6. Docker 이미지 빌드 및 푸시
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: . # Dockerfile이 있는 위치
        push: true # true로 설정해야 Docker Hub로 푸시
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest # Docker Hub 사용자명/이미지명:태그

    # 7. EC2에 배포
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master # SSH 접속 액션
      with:
        host: ${{ secrets.EC2_HOST }}             # EC2 인스턴스 Public IP
        username: ${{ secrets.EC2_USERNAME }}     # EC2 접속 유저 (e.g., ec2-user, ubuntu)
        key: ${{ secrets.EC2_SSH_KEY }}         # EC2 접속용 .pem 키
        script: |
          # 7-1. 최신 이미지 pull
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest
          
          # 7-2. 기존 컨테이너 중지 (있으면)
          docker stop my-react-app-container || true
          
          # 7-3. 기존 컨테이너 삭제 (있으면)
          docker rm my-react-app-container || true
          
          # 7-4. 새 컨테이너 실행 (EC2의 80번 포트와 컨테이너의 80번 포트 연결)
          docker run -d -p 80:80 --name my-react-app-container ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest